#include <png.h>
#include <stdexcept>

#ifndef _H_PNGCODEC
#define _H_PNGCODEC

struct Image
{
    int width;
    int height;
    unsigned char** data;
};

//
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
//
// class PNGCodec
//
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
//
class PNGCodec 
{
 //
 ////////////////////////////////////////////////////
 // PUBLIC MEMBERS
 ////////////////////////////////////////////////////
 //
 public:
	PNGCodec();
	virtual ~PNGCodec();

	static Image* readPNG(const char *filename);
	static void writePNG(const char *filename, Image &img);

 //
 ////////////////////////////////////////////////////
 // PROTECTED MEMBERS
 ////////////////////////////////////////////////////
 //
 protected:
	static void initPNGStructs(FILE *pngFP, png_structp &png, png_infop &pngInfo, int bForReading);
	static Image* readPNGIntoImage(png_structp &png, png_infop &pngInfo);
	static void writeImageToPNG(Image &img, png_structp &png, png_infop &pngInfo);

 //
 ////////////////////////////////////////////////////
 // MEMBER VARIABLES
 ////////////////////////////////////////////////////
 //
 protected:
};

#endif	// _H_PNGCODEC

